"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import meadowgrid.meadowgrid_pb2

class MeadowGridCoordinatorStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    add_job: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.Job, meadowgrid.meadowgrid_pb2.AddJobResponse
    ] = ...

    add_tasks_to_grid_job: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.AddTasksToGridJobRequest,
        meadowgrid.meadowgrid_pb2.AddJobResponse,
    ] = ...

    update_job_states: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.JobStateUpdates,
        meadowgrid.meadowgrid_pb2.UpdateStateResponse,
    ] = ...

    get_next_job: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.NextJobRequest,
        meadowgrid.meadowgrid_pb2.NextJobResponse,
    ] = ...

    update_grid_task_state_and_get_next: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.GridTaskUpdateAndGetNextRequest,
        meadowgrid.meadowgrid_pb2.GridTask,
    ] = ...
    """this can only get tasks from the same job"""

    get_simple_job_states: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.JobStatesRequest,
        meadowgrid.meadowgrid_pb2.ProcessStates,
    ] = ...

    get_grid_task_states: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.GridTaskStatesRequest,
        meadowgrid.meadowgrid_pb2.GridTaskStates,
    ] = ...

    add_credentials: grpc.UnaryUnaryMultiCallable[
        meadowgrid.meadowgrid_pb2.AddCredentialsRequest,
        meadowgrid.meadowgrid_pb2.AddCredentialsResponse,
    ] = ...

class MeadowGridCoordinatorServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def add_job(
        self,
        request: meadowgrid.meadowgrid_pb2.Job,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.AddJobResponse: ...
    @abc.abstractmethod
    def add_tasks_to_grid_job(
        self,
        request: meadowgrid.meadowgrid_pb2.AddTasksToGridJobRequest,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.AddJobResponse: ...
    @abc.abstractmethod
    def update_job_states(
        self,
        request: meadowgrid.meadowgrid_pb2.JobStateUpdates,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.UpdateStateResponse: ...
    @abc.abstractmethod
    def get_next_job(
        self,
        request: meadowgrid.meadowgrid_pb2.NextJobRequest,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.NextJobResponse: ...
    @abc.abstractmethod
    def update_grid_task_state_and_get_next(
        self,
        request: meadowgrid.meadowgrid_pb2.GridTaskUpdateAndGetNextRequest,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.GridTask:
        """this can only get tasks from the same job"""
        pass
    @abc.abstractmethod
    def get_simple_job_states(
        self,
        request: meadowgrid.meadowgrid_pb2.JobStatesRequest,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.ProcessStates: ...
    @abc.abstractmethod
    def get_grid_task_states(
        self,
        request: meadowgrid.meadowgrid_pb2.GridTaskStatesRequest,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.GridTaskStates: ...
    @abc.abstractmethod
    def add_credentials(
        self,
        request: meadowgrid.meadowgrid_pb2.AddCredentialsRequest,
        context: grpc.ServicerContext,
    ) -> meadowgrid.meadowgrid_pb2.AddCredentialsResponse: ...

def add_MeadowGridCoordinatorServicer_to_server(
    servicer: MeadowGridCoordinatorServicer, server: grpc.Server
) -> None: ...
